"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const game_object_1 = require("./game-object");
/**
 * The weather effect that will be applied at the end of a turn, which causes
 * fires to spread.
 */
class Forecast extends game_object_1.GameObject {
    // <<-- Creer-Merge: attributes -->>
    // Any additional member attributes can go here
    // NOTE: They will not be sent to the AIs, those must be defined
    // in the creer file.
    // <<-- /Creer-Merge: attributes -->>
    /**
     * Called when a Forecast is created.
     *
     * @param args - Initial value(s) to set member variables to.
     * @param required - Data required to initialize this (ignore it).
     */
    constructor(args, required) {
        super(args, required);
        // <<-- Creer-Merge: constructor -->>
        this.controllingPlayer = args.controllingPlayer;
        // <<-- /Creer-Merge: constructor -->>
    }
}
exports.Forecast = Forecast;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yZWNhc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZ2FtZXMvYW5hcmNoeS9mb3JlY2FzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLCtDQUEyQztBQWEzQzs7O0dBR0c7QUFDSCxNQUFhLFFBQVMsU0FBUSx3QkFBVTtJQW1CcEMsb0NBQW9DO0lBRXBDLCtDQUErQztJQUMvQyxnRUFBZ0U7SUFDaEUscUJBQXFCO0lBRXJCLHFDQUFxQztJQUVyQzs7Ozs7T0FLRztJQUNILFlBQ0ksSUFTRSxFQUNGLFFBQStDO1FBRS9DLEtBQUssQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFFdEIscUNBQXFDO1FBRXJDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUM7UUFFaEQsc0NBQXNDO0lBQzFDLENBQUM7Q0FlSjtBQXBFRCw0QkFvRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQmFzZUdhbWVPYmplY3RSZXF1aXJlZERhdGEgfSBmcm9tIFwifi9jb3JlL2dhbWVcIjtcbmltcG9ydCB7IElGb3JlY2FzdFByb3BlcnRpZXMgfSBmcm9tIFwiLi9cIjtcbmltcG9ydCB7IEdhbWVPYmplY3QgfSBmcm9tIFwiLi9nYW1lLW9iamVjdFwiO1xuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSBcIi4vcGxheWVyXCI7XG5cbi8vIDw8LS0gQ3JlZXItTWVyZ2U6IGltcG9ydHMgLS0+PlxuLy8gYW55IGFkZGl0aW9uYWwgaW1wb3J0cyB5b3Ugd2FudCBjYW4gYmUgcGxhY2VkIGhlcmUgc2FmZWx5IGJldHdlZW4gY3JlZXIgcnVuc1xuLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IGltcG9ydHMgLS0+PlxuXG4vKipcbiAqIFRoZSBkaXJlY3Rpb24gdGhlIHdpbmQgd2lsbCBibG93IGZpcmVzIGluLiBDYW4gYmUgJ25vcnRoJywgJ2Vhc3QnLCAnc291dGgnLFxuICogb3IgJ3dlc3QnLlxuICovXG5leHBvcnQgdHlwZSBGb3JlY2FzdERpcmVjdGlvbiA9IFwiTm9ydGhcIiB8IFwiRWFzdFwiIHwgXCJTb3V0aFwiIHwgXCJXZXN0XCI7XG5cbi8qKlxuICogVGhlIHdlYXRoZXIgZWZmZWN0IHRoYXQgd2lsbCBiZSBhcHBsaWVkIGF0IHRoZSBlbmQgb2YgYSB0dXJuLCB3aGljaCBjYXVzZXNcbiAqIGZpcmVzIHRvIHNwcmVhZC5cbiAqL1xuZXhwb3J0IGNsYXNzIEZvcmVjYXN0IGV4dGVuZHMgR2FtZU9iamVjdCB7XG4gICAgLyoqXG4gICAgICogVGhlIFBsYXllciB0aGF0IGNhbiB1c2UgV2VhdGhlclN0YXRpb25zIHRvIGNvbnRyb2wgdGhpcyBGb3JlY2FzdCB3aGVuXG4gICAgICogaXRzIHRoZSBuZXh0Rm9yZWNhc3QuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGNvbnRyb2xsaW5nUGxheWVyOiBQbGF5ZXI7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgZGlyZWN0aW9uIHRoZSB3aW5kIHdpbGwgYmxvdyBmaXJlcyBpbi4gQ2FuIGJlICdub3J0aCcsICdlYXN0JyxcbiAgICAgKiAnc291dGgnLCBvciAnd2VzdCcuXG4gICAgICovXG4gICAgcHVibGljIGRpcmVjdGlvbiE6IFwiTm9ydGhcIiB8IFwiRWFzdFwiIHwgXCJTb3V0aFwiIHwgXCJXZXN0XCI7XG5cbiAgICAvKipcbiAgICAgKiBIb3cgbXVjaCBvZiBhIEJ1aWxkaW5nJ3MgZmlyZSB0aGF0IGNhbiBiZSBibG93biBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoaXNcbiAgICAgKiBGb3JlY2FzdC4gRmlyZSBpcyBkdXBsaWNhdGVkIChjb3BpZWQpLCBub3QgbW92ZWQgKHRyYW5zZmVyZWQpLlxuICAgICAqL1xuICAgIHB1YmxpYyBpbnRlbnNpdHkhOiBudW1iZXI7XG5cbiAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBhdHRyaWJ1dGVzIC0tPj5cblxuICAgIC8vIEFueSBhZGRpdGlvbmFsIG1lbWJlciBhdHRyaWJ1dGVzIGNhbiBnbyBoZXJlXG4gICAgLy8gTk9URTogVGhleSB3aWxsIG5vdCBiZSBzZW50IHRvIHRoZSBBSXMsIHRob3NlIG11c3QgYmUgZGVmaW5lZFxuICAgIC8vIGluIHRoZSBjcmVlciBmaWxlLlxuXG4gICAgLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IGF0dHJpYnV0ZXMgLS0+PlxuXG4gICAgLyoqXG4gICAgICogQ2FsbGVkIHdoZW4gYSBGb3JlY2FzdCBpcyBjcmVhdGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBJbml0aWFsIHZhbHVlKHMpIHRvIHNldCBtZW1iZXIgdmFyaWFibGVzIHRvLlxuICAgICAqIEBwYXJhbSByZXF1aXJlZCAtIERhdGEgcmVxdWlyZWQgdG8gaW5pdGlhbGl6ZSB0aGlzIChpZ25vcmUgaXQpLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBhcmdzOiBSZWFkb25seTxJRm9yZWNhc3RQcm9wZXJ0aWVzICYge1xuICAgICAgICAgICAgLy8gPDwtLSBDcmVlci1NZXJnZTogY29uc3RydWN0b3ItYXJncyAtLT4+XG4gICAgICAgICAgICAvKiogVGhlIGRpcmVjdGlvbiB0aGlzIEZvcmVjYXN0IHdpbGwgYmUuICovXG4gICAgICAgICAgICBkaXJlY3Rpb246IEZvcmVjYXN0RGlyZWN0aW9uO1xuICAgICAgICAgICAgLyoqIFRoZSBpbnRlbnNpdHkgdmFsdWUgb2YgdGhpcyBGb3JlY2FzdC4gKi9cbiAgICAgICAgICAgIGludGVuc2l0eTogbnVtYmVyO1xuICAgICAgICAgICAgLyoqIFRoZSBwbGF5ZXIgd2hvc2UgdHVybiBpdCB3aWxsIGJlIG9uIHRoZSB0dXJuIHRoaXMgRm9yZWNhc3QgY2FuIGJlIG1hbmlwdWxhdGVkLiAqL1xuICAgICAgICAgICAgY29udHJvbGxpbmdQbGF5ZXI6IFBsYXllcjtcbiAgICAgICAgICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBjb25zdHJ1Y3Rvci1hcmdzIC0tPj5cbiAgICAgICAgfT4sXG4gICAgICAgIHJlcXVpcmVkOiBSZWFkb25seTxJQmFzZUdhbWVPYmplY3RSZXF1aXJlZERhdGE+LFxuICAgICkge1xuICAgICAgICBzdXBlcihhcmdzLCByZXF1aXJlZCk7XG5cbiAgICAgICAgLy8gPDwtLSBDcmVlci1NZXJnZTogY29uc3RydWN0b3IgLS0+PlxuXG4gICAgICAgIHRoaXMuY29udHJvbGxpbmdQbGF5ZXIgPSBhcmdzLmNvbnRyb2xsaW5nUGxheWVyO1xuXG4gICAgICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBjb25zdHJ1Y3RvciAtLT4+XG4gICAgfVxuXG4gICAgLy8gPDwtLSBDcmVlci1NZXJnZTogcHVibGljLWZ1bmN0aW9ucyAtLT4+XG5cbiAgICAvLyBBbnkgcHVibGljIGZ1bmN0aW9ucyBjYW4gZ28gaGVyZSBmb3Igb3RoZXIgdGhpbmdzIGluIHRoZSBnYW1lIHRvIHVzZS5cbiAgICAvLyBOT1RFOiBDbGllbnQgQUlzIGNhbm5vdCBjYWxsIHRoZXNlIGZ1bmN0aW9ucywgdGhvc2UgbXVzdCBiZSBkZWZpbmVkXG4gICAgLy8gaW4gdGhlIGNyZWVyIGZpbGUuXG5cbiAgICAvLyA8PC0tIC9DcmVlci1NZXJnZTogcHVibGljLWZ1bmN0aW9ucyAtLT4+XG5cbiAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBwcm90ZWN0ZWQtcHJpdmF0ZS1mdW5jdGlvbnMgLS0+PlxuXG4gICAgLy8gQW55IGFkZGl0aW9uYWwgcHJvdGVjdGVkIG9yIHBpcmF0ZSBtZXRob2RzIGNhbiBnbyBoZXJlLlxuXG4gICAgLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IHByb3RlY3RlZC1wcml2YXRlLWZ1bmN0aW9ucyAtLT4+XG59XG4iXX0=