"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require("./");
// <<-- Creer-Merge: imports -->>
// any additional imports you want can be placed here safely between creer runs
// <<-- /Creer-Merge: imports -->>
/**
 * An object in the game. The most basic class that all game classes should
 * inherit from automatically.
 */
class GameObject extends _1.BaseClasses.GameObject {
    // <<-- Creer-Merge: attributes -->>
    // Any additional member attributes can go here
    // NOTE: They will not be sent to the AIs, those must be defined
    // in the creer file.
    // <<-- /Creer-Merge: attributes -->>
    /**
     * Called when a GameObject is created.
     *
     * @param args - Initial value(s) to set member variables to.
     * @param required - Data required to initialize this (ignore it).
     */
    constructor(
    // never directly created by game developers
    args, required) {
        super(args, required);
        // <<-- Creer-Merge: constructor -->>
        // setup any thing you need here
        // <<-- /Creer-Merge: constructor -->>
    }
}
exports.GameObject = GameObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FtZS1vYmplY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZ2FtZXMvc2Fsb29uL2dhbWUtb2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EseUJBQXdEO0FBSXhELGlDQUFpQztBQUNqQywrRUFBK0U7QUFDL0Usa0NBQWtDO0FBRWxDOzs7R0FHRztBQUNILE1BQWEsVUFBVyxTQUFRLGNBQVcsQ0FBQyxVQUFVO0lBMEJsRCxvQ0FBb0M7SUFFcEMsK0NBQStDO0lBQy9DLGdFQUFnRTtJQUNoRSxxQkFBcUI7SUFFckIscUNBQXFDO0lBRXJDOzs7OztPQUtHO0lBQ0g7SUFDSSw0Q0FBNEM7SUFDNUMsSUFBcUMsRUFDckMsUUFBK0M7UUFFL0MsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixxQ0FBcUM7UUFDckMsZ0NBQWdDO1FBQ2hDLHNDQUFzQztJQUMxQyxDQUFDO0NBZUo7QUFqRUQsZ0NBaUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUJhc2VHYW1lT2JqZWN0UmVxdWlyZWREYXRhIH0gZnJvbSBcIn4vY29yZS9nYW1lXCI7XG5pbXBvcnQgeyBCYXNlQ2xhc3NlcywgSUdhbWVPYmplY3RQcm9wZXJ0aWVzIH0gZnJvbSBcIi4vXCI7XG5pbXBvcnQgeyBTYWxvb25HYW1lIH0gZnJvbSBcIi4vZ2FtZVwiO1xuaW1wb3J0IHsgU2Fsb29uR2FtZU1hbmFnZXIgfSBmcm9tIFwiLi9nYW1lLW1hbmFnZXJcIjtcblxuLy8gPDwtLSBDcmVlci1NZXJnZTogaW1wb3J0cyAtLT4+XG4vLyBhbnkgYWRkaXRpb25hbCBpbXBvcnRzIHlvdSB3YW50IGNhbiBiZSBwbGFjZWQgaGVyZSBzYWZlbHkgYmV0d2VlbiBjcmVlciBydW5zXG4vLyA8PC0tIC9DcmVlci1NZXJnZTogaW1wb3J0cyAtLT4+XG5cbi8qKlxuICogQW4gb2JqZWN0IGluIHRoZSBnYW1lLiBUaGUgbW9zdCBiYXNpYyBjbGFzcyB0aGF0IGFsbCBnYW1lIGNsYXNzZXMgc2hvdWxkXG4gKiBpbmhlcml0IGZyb20gYXV0b21hdGljYWxseS5cbiAqL1xuZXhwb3J0IGNsYXNzIEdhbWVPYmplY3QgZXh0ZW5kcyBCYXNlQ2xhc3Nlcy5HYW1lT2JqZWN0IHtcbiAgICAvKiogVGhlIGdhbWUgdGhpcyBnYW1lIG9iamVjdCBpcyBpbiAqL1xuICAgIHB1YmxpYyByZWFkb25seSBnYW1lITogU2Fsb29uR2FtZTtcblxuICAgIC8qKiBUaGUgbWFuYWdlciBvZiB0aGUgZ2FtZSB0aGF0IGNvbnRyb2xzIHRoaXMgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgbWFuYWdlciE6IFNhbG9vbkdhbWVNYW5hZ2VyO1xuXG4gICAgLyoqXG4gICAgICogU3RyaW5nIHJlcHJlc2VudGluZyB0aGUgdG9wIGxldmVsIENsYXNzIHRoYXQgdGhpcyBnYW1lIG9iamVjdCBpcyBhblxuICAgICAqIGluc3RhbmNlIG9mLiBVc2VkIGZvciByZWZsZWN0aW9uIHRvIGNyZWF0ZSBuZXcgaW5zdGFuY2VzIG9uIGNsaWVudHMsIGJ1dFxuICAgICAqIGV4cG9zZWQgZm9yIGNvbnZlbmllbmNlIHNob3VsZCBBSXMgd2FudCB0aGlzIGRhdGEuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGdhbWVPYmplY3ROYW1lITogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQSB1bmlxdWUgaWQgZm9yIGVhY2ggaW5zdGFuY2Ugb2YgYSBHYW1lT2JqZWN0IG9yIGEgc3ViIGNsYXNzLiBVc2VkIGZvclxuICAgICAqIGNsaWVudCBhbmQgc2VydmVyIGNvbW11bmljYXRpb24uIFNob3VsZCBuZXZlciBjaGFuZ2UgdmFsdWUgYWZ0ZXIgYmVpbmdcbiAgICAgKiBzZXQuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IGlkITogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogQW55IHN0cmluZ3MgbG9nZ2VkIHdpbGwgYmUgc3RvcmVkIGhlcmUuIEludGVuZGVkIGZvciBkZWJ1Z2dpbmcuXG4gICAgICovXG4gICAgcHVibGljIGxvZ3MhOiBzdHJpbmdbXTtcblxuICAgIC8vIDw8LS0gQ3JlZXItTWVyZ2U6IGF0dHJpYnV0ZXMgLS0+PlxuXG4gICAgLy8gQW55IGFkZGl0aW9uYWwgbWVtYmVyIGF0dHJpYnV0ZXMgY2FuIGdvIGhlcmVcbiAgICAvLyBOT1RFOiBUaGV5IHdpbGwgbm90IGJlIHNlbnQgdG8gdGhlIEFJcywgdGhvc2UgbXVzdCBiZSBkZWZpbmVkXG4gICAgLy8gaW4gdGhlIGNyZWVyIGZpbGUuXG5cbiAgICAvLyA8PC0tIC9DcmVlci1NZXJnZTogYXR0cmlidXRlcyAtLT4+XG5cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiBhIEdhbWVPYmplY3QgaXMgY3JlYXRlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcmdzIC0gSW5pdGlhbCB2YWx1ZShzKSB0byBzZXQgbWVtYmVyIHZhcmlhYmxlcyB0by5cbiAgICAgKiBAcGFyYW0gcmVxdWlyZWQgLSBEYXRhIHJlcXVpcmVkIHRvIGluaXRpYWxpemUgdGhpcyAoaWdub3JlIGl0KS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgLy8gbmV2ZXIgZGlyZWN0bHkgY3JlYXRlZCBieSBnYW1lIGRldmVsb3BlcnNcbiAgICAgICAgYXJnczogUmVhZG9ubHk8SUdhbWVPYmplY3RQcm9wZXJ0aWVzPixcbiAgICAgICAgcmVxdWlyZWQ6IFJlYWRvbmx5PElCYXNlR2FtZU9iamVjdFJlcXVpcmVkRGF0YT4sXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGFyZ3MsIHJlcXVpcmVkKTtcblxuICAgICAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBjb25zdHJ1Y3RvciAtLT4+XG4gICAgICAgIC8vIHNldHVwIGFueSB0aGluZyB5b3UgbmVlZCBoZXJlXG4gICAgICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBjb25zdHJ1Y3RvciAtLT4+XG4gICAgfVxuXG4gICAgLy8gPDwtLSBDcmVlci1NZXJnZTogcHVibGljLWZ1bmN0aW9ucyAtLT4+XG5cbiAgICAvLyBBbnkgcHVibGljIGZ1bmN0aW9ucyBjYW4gZ28gaGVyZSBmb3Igb3RoZXIgdGhpbmdzIGluIHRoZSBnYW1lIHRvIHVzZS5cbiAgICAvLyBOT1RFOiBDbGllbnQgQUlzIGNhbm5vdCBjYWxsIHRoZXNlIGZ1bmN0aW9ucywgdGhvc2UgbXVzdCBiZSBkZWZpbmVkXG4gICAgLy8gaW4gdGhlIGNyZWVyIGZpbGUuXG5cbiAgICAvLyA8PC0tIC9DcmVlci1NZXJnZTogcHVibGljLWZ1bmN0aW9ucyAtLT4+XG5cbiAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBwcm90ZWN0ZWQtcHJpdmF0ZS1mdW5jdGlvbnMgLS0+PlxuXG4gICAgLy8gQW55IGFkZGl0aW9uYWwgcHJvdGVjdGVkIG9yIHBpcmF0ZSBtZXRob2RzIGNhbiBnbyBoZXJlLlxuXG4gICAgLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IHByb3RlY3RlZC1wcml2YXRlLWZ1bmN0aW9ucyAtLT4+XG59XG4iXX0=