"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const game_object_1 = require("./game-object");
/**
 * A machine in the game. Used to refine ore.
 */
class Machine extends game_object_1.GameObject {
    // <<-- Creer-Merge: attributes -->>
    // Any additional member attributes can go here
    // NOTE: They will not be sent to the AIs, those must be defined
    // in the creer file.
    // <<-- /Creer-Merge: attributes -->>
    /**
     * Called when a Machine is created.
     *
     * @param args - Initial value(s) to set member variables to.
     * @param required - Data required to initialize this (ignore it).
     */
    constructor(args, required) {
        super(args, required);
        // <<-- Creer-Merge: constructor -->>
        this.tile = args.tile;
        // setup any thing you need here
        // <<-- /Creer-Merge: constructor -->>
    }
}
exports.Machine = Machine;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFjaGluZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nYW1lcy9uZXd0b25pYW4vbWFjaGluZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLCtDQUEyQztBQWEzQzs7R0FFRztBQUNILE1BQWEsT0FBUSxTQUFRLHdCQUFVO0lBa0NuQyxvQ0FBb0M7SUFFcEMsK0NBQStDO0lBQy9DLGdFQUFnRTtJQUNoRSxxQkFBcUI7SUFFckIscUNBQXFDO0lBRXJDOzs7OztPQUtHO0lBQ0gsWUFDSSxJQU1FLEVBQ0YsUUFBK0M7UUFFL0MsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3RCLGdDQUFnQztRQUNoQyxzQ0FBc0M7SUFDMUMsQ0FBQztDQWVKO0FBL0VELDBCQStFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElCYXNlR2FtZU9iamVjdFJlcXVpcmVkRGF0YSB9IGZyb20gXCJ+L2NvcmUvZ2FtZVwiO1xuaW1wb3J0IHsgSU1hY2hpbmVQcm9wZXJ0aWVzIH0gZnJvbSBcIi4vXCI7XG5pbXBvcnQgeyBHYW1lT2JqZWN0IH0gZnJvbSBcIi4vZ2FtZS1vYmplY3RcIjtcbmltcG9ydCB7IFRpbGUgfSBmcm9tIFwiLi90aWxlXCI7XG5cbi8vIDw8LS0gQ3JlZXItTWVyZ2U6IGltcG9ydHMgLS0+PlxuLy8gYW55IGFkZGl0aW9uYWwgaW1wb3J0cyB5b3Ugd2FudCBjYW4gYmUgcGxhY2VkIGhlcmUgc2FmZWx5IGJldHdlZW4gY3JlZXIgcnVuc1xuLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IGltcG9ydHMgLS0+PlxuXG4vKipcbiAqIFdoYXQgdHlwZSBvZiBvcmUgdGhlIG1hY2hpbmUgdGFrZXMgaXQuIEFsc28gZGV0ZXJtaW5lcyB0aGUgdHlwZSBvZiBtYXRlcmlhbFxuICogaXQgb3V0cHV0cy4gKHJlZGl1bSBvciBibHVlaXVtKS5cbiAqL1xuZXhwb3J0IHR5cGUgTWFjaGluZU9yZVR5cGUgPSBcInJlZGl1bVwiIHwgXCJibHVlaXVtXCI7XG5cbi8qKlxuICogQSBtYWNoaW5lIGluIHRoZSBnYW1lLiBVc2VkIHRvIHJlZmluZSBvcmUuXG4gKi9cbmV4cG9ydCBjbGFzcyBNYWNoaW5lIGV4dGVuZHMgR2FtZU9iamVjdCB7XG4gICAgLyoqXG4gICAgICogV2hhdCB0eXBlIG9mIG9yZSB0aGUgbWFjaGluZSB0YWtlcyBpdC4gQWxzbyBkZXRlcm1pbmVzIHRoZSB0eXBlIG9mXG4gICAgICogbWF0ZXJpYWwgaXQgb3V0cHV0cy4gKHJlZGl1bSBvciBibHVlaXVtKS5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgb3JlVHlwZSE6IFwicmVkaXVtXCIgfCBcImJsdWVpdW1cIjtcblxuICAgIC8qKlxuICAgICAqIFRoZSBhbW91bnQgb2Ygb3JlIHRoYXQgbmVlZHMgdG8gYmUgaW5wdXR0ZWQgaW50byB0aGUgbWFjaGluZSBmb3IgaXQgdG9cbiAgICAgKiBiZSB3b3JrZWQuXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IHJlZmluZUlucHV0ITogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogVGhlIGFtb3VudCBvZiByZWZpbmVkIG9yZSB0aGF0IGlzIHJldHVybmVkIGFmdGVyIHRoZSBtYWNoaW5lIGhhcyBiZWVuXG4gICAgICogZnVsbHkgd29ya2VkLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSByZWZpbmVPdXRwdXQhOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRoaXMgbWFjaGluZSBuZWVkcyB0byBiZSB3b3JrZWQgdG8gcmVmaW5lIG9yZS5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgcmVmaW5lVGltZSE6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIFRoZSBUaWxlIHRoaXMgTWFjaGluZSBpcyBvbi5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgdGlsZTogVGlsZTtcblxuICAgIC8qKlxuICAgICAqIFRyYWNrcyBob3cgbWFueSB0aW1lcyB0aGlzIG1hY2hpbmUgaGFzIGJlZW4gd29ya2VkLiAoMCB0byByZWZpbmVUaW1lKS5cbiAgICAgKi9cbiAgICBwdWJsaWMgd29ya2VkITogbnVtYmVyO1xuXG4gICAgLy8gPDwtLSBDcmVlci1NZXJnZTogYXR0cmlidXRlcyAtLT4+XG5cbiAgICAvLyBBbnkgYWRkaXRpb25hbCBtZW1iZXIgYXR0cmlidXRlcyBjYW4gZ28gaGVyZVxuICAgIC8vIE5PVEU6IFRoZXkgd2lsbCBub3QgYmUgc2VudCB0byB0aGUgQUlzLCB0aG9zZSBtdXN0IGJlIGRlZmluZWRcbiAgICAvLyBpbiB0aGUgY3JlZXIgZmlsZS5cblxuICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBhdHRyaWJ1dGVzIC0tPj5cblxuICAgIC8qKlxuICAgICAqIENhbGxlZCB3aGVuIGEgTWFjaGluZSBpcyBjcmVhdGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBJbml0aWFsIHZhbHVlKHMpIHRvIHNldCBtZW1iZXIgdmFyaWFibGVzIHRvLlxuICAgICAqIEBwYXJhbSByZXF1aXJlZCAtIERhdGEgcmVxdWlyZWQgdG8gaW5pdGlhbGl6ZSB0aGlzIChpZ25vcmUgaXQpLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBhcmdzOiBSZWFkb25seTxJTWFjaGluZVByb3BlcnRpZXMgJiB7XG4gICAgICAgICAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBjb25zdHJ1Y3Rvci1hcmdzIC0tPj5cbiAgICAgICAgICAgIC8qKiBUaGUgVGlsZSB0byBzcGF3biB0aGlzIE1hY2hpbmUgdXBvbi4gKi9cbiAgICAgICAgICAgIHRpbGU6IFRpbGU7XG4gICAgICAgICAgICAvLyBZb3UgY2FuIGFkZCBtb3JlIGNvbnN0cnVjdG9yIGFyZ3MgaW4gaGVyZVxuICAgICAgICAgICAgLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IGNvbnN0cnVjdG9yLWFyZ3MgLS0+PlxuICAgICAgICB9PixcbiAgICAgICAgcmVxdWlyZWQ6IFJlYWRvbmx5PElCYXNlR2FtZU9iamVjdFJlcXVpcmVkRGF0YT4sXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGFyZ3MsIHJlcXVpcmVkKTtcblxuICAgICAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBjb25zdHJ1Y3RvciAtLT4+XG4gICAgICAgIHRoaXMudGlsZSA9IGFyZ3MudGlsZTtcbiAgICAgICAgLy8gc2V0dXAgYW55IHRoaW5nIHlvdSBuZWVkIGhlcmVcbiAgICAgICAgLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IGNvbnN0cnVjdG9yIC0tPj5cbiAgICB9XG5cbiAgICAvLyA8PC0tIENyZWVyLU1lcmdlOiBwdWJsaWMtZnVuY3Rpb25zIC0tPj5cblxuICAgIC8vIEFueSBwdWJsaWMgZnVuY3Rpb25zIGNhbiBnbyBoZXJlIGZvciBvdGhlciB0aGluZ3MgaW4gdGhlIGdhbWUgdG8gdXNlLlxuICAgIC8vIE5PVEU6IENsaWVudCBBSXMgY2Fubm90IGNhbGwgdGhlc2UgZnVuY3Rpb25zLCB0aG9zZSBtdXN0IGJlIGRlZmluZWRcbiAgICAvLyBpbiB0aGUgY3JlZXIgZmlsZS5cblxuICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBwdWJsaWMtZnVuY3Rpb25zIC0tPj5cblxuICAgIC8vIDw8LS0gQ3JlZXItTWVyZ2U6IHByb3RlY3RlZC1wcml2YXRlLWZ1bmN0aW9ucyAtLT4+XG5cbiAgICAvLyBBbnkgYWRkaXRpb25hbCBwcm90ZWN0ZWQgb3IgcGlyYXRlIG1ldGhvZHMgY2FuIGdvIGhlcmUuXG5cbiAgICAvLyA8PC0tIC9DcmVlci1NZXJnZTogcHJvdGVjdGVkLXByaXZhdGUtZnVuY3Rpb25zIC0tPj5cbn1cbiJdfQ==