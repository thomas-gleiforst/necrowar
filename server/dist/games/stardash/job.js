"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const game_object_1 = require("./game-object");
/**
 * Information about a unit's job.
 */
class Job extends game_object_1.GameObject {
    // <<-- Creer-Merge: attributes -->>
    // Any additional member attributes can go here
    // NOTE: They will not be sent to the AIs, those must be defined
    // in the creer file.
    // <<-- /Creer-Merge: attributes -->>
    /**
     * Called when a Job is created.
     *
     * @param args - Initial value(s) to set member variables to.
     * @param required - Data required to initialize this (ignore it).
     */
    constructor(args, required) {
        super(args, required);
        // <<-- Creer-Merge: constructor -->>
        // setup any thing you need here
        // <<-- /Creer-Merge: constructor -->>
    }
}
exports.Job = Job;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam9iLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2dhbWVzL3N0YXJkYXNoL2pvYi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLCtDQUEyQztBQVkzQzs7R0FFRztBQUNILE1BQWEsR0FBSSxTQUFRLHdCQUFVO0lBMEMvQixvQ0FBb0M7SUFFcEMsK0NBQStDO0lBQy9DLGdFQUFnRTtJQUNoRSxxQkFBcUI7SUFFckIscUNBQXFDO0lBRXJDOzs7OztPQUtHO0lBQ0gsWUFDSSxJQUlFLEVBQ0YsUUFBK0M7UUFFL0MsS0FBSyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV0QixxQ0FBcUM7UUFDckMsZ0NBQWdDO1FBQ2hDLHNDQUFzQztJQUMxQyxDQUFDO0NBZUo7QUFwRkQsa0JBb0ZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUJhc2VHYW1lT2JqZWN0UmVxdWlyZWREYXRhIH0gZnJvbSBcIn4vY29yZS9nYW1lXCI7XG5pbXBvcnQgeyBJSm9iUHJvcGVydGllcyB9IGZyb20gXCIuL1wiO1xuaW1wb3J0IHsgR2FtZU9iamVjdCB9IGZyb20gXCIuL2dhbWUtb2JqZWN0XCI7XG5cbi8vIDw8LS0gQ3JlZXItTWVyZ2U6IGltcG9ydHMgLS0+PlxuLy8gYW55IGFkZGl0aW9uYWwgaW1wb3J0cyB5b3Ugd2FudCBjYW4gYmUgcGxhY2VkIGhlcmUgc2FmZWx5IGJldHdlZW4gY3JlZXIgcnVuc1xuLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IGltcG9ydHMgLS0+PlxuXG4vKipcbiAqIFRoZSBKb2IgdGl0bGUuICdjb3J2ZXR0ZScsICdtaXNzaWxlYm9hdCcsICdtYXJ0eXInLCAndHJhbnNwb3J0Jywgb3IgJ21pbmVyJy5cbiAqIChpbiB0aGlzIG9yZGVyIGZyb20gMC00KS5cbiAqL1xuZXhwb3J0IHR5cGUgSm9iVGl0bGUgPSBcImNvcnZldHRlXCIgfCBcIm1pc3NpbGVib2F0XCIgfCBcIm1hcnR5clwiIHwgXCJ0cmFuc3BvcnRcIiB8IFwibWluZXJcIjtcblxuLyoqXG4gKiBJbmZvcm1hdGlvbiBhYm91dCBhIHVuaXQncyBqb2IuXG4gKi9cbmV4cG9ydCBjbGFzcyBKb2IgZXh0ZW5kcyBHYW1lT2JqZWN0IHtcbiAgICAvKipcbiAgICAgKiBIb3cgbWFueSBjb21iaW5lZCByZXNvdXJjZXMgYSB1bml0IHdpdGggdGhpcyBKb2IgY2FuIGhvbGQgYXQgb25jZS5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgY2FycnlMaW1pdCE6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIFRoZSBhbW91bnQgb2YgZGFtYWdlIHRoaXMgSm9iIGRvZXMgcGVyIGF0dGFjay5cbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgZGFtYWdlITogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogVGhlIGFtb3VudCBvZiBzdGFydGluZyBoZWFsdGggdGhpcyBKb2IgaGFzLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBlbmVyZ3khOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgZGlzdGFuY2UgdGhpcyBqb2IgY2FuIG1vdmUgcGVyIHR1cm4uXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IG1vdmVzITogbnVtYmVyO1xuXG4gICAgLyoqXG4gICAgICogVGhlIGRpc3RhbmNlIGF0IHdoaWNoIHRoaXMgam9iIGNhbiBlZmZlY3QgdGhpbmdzLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSByYW5nZSE6IG51bWJlcjtcblxuICAgIC8qKlxuICAgICAqIFRoZSByZXNlcnZlIHRoZSBtYXJ0eXIgdXNlIHRvIHByb3RlY3QgYWxsaWVzLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSBzaGllbGQhOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgSm9iIHRpdGxlLiAnY29ydmV0dGUnLCAnbWlzc2lsZWJvYXQnLCAnbWFydHlyJywgJ3RyYW5zcG9ydCcsIG9yXG4gICAgICogJ21pbmVyJy4gKGluIHRoaXMgb3JkZXIgZnJvbSAwLTQpLlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSB0aXRsZSE6IFwiY29ydmV0dGVcIiB8IFwibWlzc2lsZWJvYXRcIiB8IFwibWFydHlyXCIgfCBcInRyYW5zcG9ydFwiIHwgXCJtaW5lclwiO1xuXG4gICAgLyoqXG4gICAgICogSG93IG11Y2ggbW9uZXkgaXQgY29zdHMgdG8gc3Bhd24gYSB1bml0LlxuICAgICAqL1xuICAgIHB1YmxpYyByZWFkb25seSB1bml0Q29zdCE6IG51bWJlcjtcblxuICAgIC8vIDw8LS0gQ3JlZXItTWVyZ2U6IGF0dHJpYnV0ZXMgLS0+PlxuXG4gICAgLy8gQW55IGFkZGl0aW9uYWwgbWVtYmVyIGF0dHJpYnV0ZXMgY2FuIGdvIGhlcmVcbiAgICAvLyBOT1RFOiBUaGV5IHdpbGwgbm90IGJlIHNlbnQgdG8gdGhlIEFJcywgdGhvc2UgbXVzdCBiZSBkZWZpbmVkXG4gICAgLy8gaW4gdGhlIGNyZWVyIGZpbGUuXG5cbiAgICAvLyA8PC0tIC9DcmVlci1NZXJnZTogYXR0cmlidXRlcyAtLT4+XG5cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiBhIEpvYiBpcyBjcmVhdGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZ3MgLSBJbml0aWFsIHZhbHVlKHMpIHRvIHNldCBtZW1iZXIgdmFyaWFibGVzIHRvLlxuICAgICAqIEBwYXJhbSByZXF1aXJlZCAtIERhdGEgcmVxdWlyZWQgdG8gaW5pdGlhbGl6ZSB0aGlzIChpZ25vcmUgaXQpLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBhcmdzOiBSZWFkb25seTxJSm9iUHJvcGVydGllcyAmIHtcbiAgICAgICAgICAgIC8vIDw8LS0gQ3JlZXItTWVyZ2U6IGNvbnN0cnVjdG9yLWFyZ3MgLS0+PlxuICAgICAgICAgICAgLy8gWW91IGNhbiBhZGQgbW9yZSBjb25zdHJ1Y3RvciBhcmdzIGluIGhlcmVcbiAgICAgICAgICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBjb25zdHJ1Y3Rvci1hcmdzIC0tPj5cbiAgICAgICAgfT4sXG4gICAgICAgIHJlcXVpcmVkOiBSZWFkb25seTxJQmFzZUdhbWVPYmplY3RSZXF1aXJlZERhdGE+LFxuICAgICkge1xuICAgICAgICBzdXBlcihhcmdzLCByZXF1aXJlZCk7XG5cbiAgICAgICAgLy8gPDwtLSBDcmVlci1NZXJnZTogY29uc3RydWN0b3IgLS0+PlxuICAgICAgICAvLyBzZXR1cCBhbnkgdGhpbmcgeW91IG5lZWQgaGVyZVxuICAgICAgICAvLyA8PC0tIC9DcmVlci1NZXJnZTogY29uc3RydWN0b3IgLS0+PlxuICAgIH1cblxuICAgIC8vIDw8LS0gQ3JlZXItTWVyZ2U6IHB1YmxpYy1mdW5jdGlvbnMgLS0+PlxuXG4gICAgLy8gQW55IHB1YmxpYyBmdW5jdGlvbnMgY2FuIGdvIGhlcmUgZm9yIG90aGVyIHRoaW5ncyBpbiB0aGUgZ2FtZSB0byB1c2UuXG4gICAgLy8gTk9URTogQ2xpZW50IEFJcyBjYW5ub3QgY2FsbCB0aGVzZSBmdW5jdGlvbnMsIHRob3NlIG11c3QgYmUgZGVmaW5lZFxuICAgIC8vIGluIHRoZSBjcmVlciBmaWxlLlxuXG4gICAgLy8gPDwtLSAvQ3JlZXItTWVyZ2U6IHB1YmxpYy1mdW5jdGlvbnMgLS0+PlxuXG4gICAgLy8gPDwtLSBDcmVlci1NZXJnZTogcHJvdGVjdGVkLXByaXZhdGUtZnVuY3Rpb25zIC0tPj5cblxuICAgIC8vIEFueSBhZGRpdGlvbmFsIHByb3RlY3RlZCBvciBwaXJhdGUgbWV0aG9kcyBjYW4gZ28gaGVyZS5cblxuICAgIC8vIDw8LS0gL0NyZWVyLU1lcmdlOiBwcm90ZWN0ZWQtcHJpdmF0ZS1mdW5jdGlvbnMgLS0+PlxufVxuIl19