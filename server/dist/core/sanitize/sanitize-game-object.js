"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Takes a variable and ensures it is a game object, If the passed in value is
 * not a game object of the class specified, returns an Error.
 *
 * @param obj Any variable, if it is a game object passes it back, otherwise
 * returns undefined or an Error.
 * @param gameObjectClass An optional game object class to enforce on the game
 * object.
 * @param allowError - If errors should be allowed to be returned if they
 * cannot be reasonable sanitized.
 * @returns The passed in game object, if it is one, otherwise undefined.
 */
function sanitizeGameObject(obj, gameObjectClass, allowError = true) {
    return obj instanceof gameObjectClass
        ? obj
        : (allowError
            ? new Error(`${obj} is not of the expected GameObject class \`${gameObjectClass.name}\``)
            : undefined);
}
exports.sanitizeGameObject = sanitizeGameObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuaXRpemUtZ2FtZS1vYmplY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29yZS9zYW5pdGl6ZS9zYW5pdGl6ZS1nYW1lLW9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQXNDQTs7Ozs7Ozs7Ozs7R0FXRztBQUNILFNBQWdCLGtCQUFrQixDQUM5QixHQUFZLEVBQ1osZUFBc0MsRUFDdEMsYUFBc0IsSUFBSTtJQUUxQixPQUFPLEdBQUcsWUFBWSxlQUFlO1FBQ2pDLENBQUMsQ0FBQyxHQUFHO1FBQ0wsQ0FBQyxDQUFDLENBQUMsVUFBVTtZQUNULENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxHQUFHLEdBQUcsOENBQThDLGVBQWUsQ0FBQyxJQUFJLElBQUksQ0FBQztZQUN6RixDQUFDLENBQUMsU0FBUyxDQUNkLENBQUM7QUFDVixDQUFDO0FBWEQsZ0RBV0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlR2FtZU9iamVjdCB9IGZyb20gXCJ+L2NvcmUvZ2FtZS9iYXNlL2Jhc2UtZ2FtZS1vYmplY3RcIjtcblxuLyoqXG4gKiBUYWtlcyBhIHZhcmlhYmxlIGFuZCBlbnN1cmVzIGl0IGlzIGEgZ2FtZSBvYmplY3QsIElmIHRoZSBwYXNzZWQgaW4gdmFsdWUgaXNcbiAqIG5vdCBhIGdhbWUgb2JqZWN0IG9mIHRoZSBjbGFzcyBzcGVjaWZpZWQsIHJldHVybnMgYW4gRXJyb3IuXG4gKlxuICogQHBhcmFtIG9iaiBBbnkgdmFyaWFibGUsIGlmIGl0IGlzIGEgZ2FtZSBvYmplY3QgcGFzc2VzIGl0IGJhY2ssIG90aGVyd2lzZVxuICogcmV0dXJucyB1bmRlZmluZWQgb3IgYW4gRXJyb3IuXG4gKiBAcGFyYW0gZ2FtZU9iamVjdENsYXNzIEFuIG9wdGlvbmFsIGdhbWUgb2JqZWN0IGNsYXNzIHRvIGVuZm9yY2Ugb24gdGhlIGdhbWVcbiAqIG9iamVjdC5cbiAqIEBwYXJhbSBhbGxvd0Vycm9yIC0gSWYgZXJyb3JzIHNob3VsZCBiZSBhbGxvd2VkIHRvIGJlIHJldHVybmVkIGlmIHRoZXlcbiAqIGNhbm5vdCBiZSByZWFzb25hYmxlIHNhbml0aXplZC5cbiAqIEByZXR1cm5zIFRoZSBwYXNzZWQgaW4gZ2FtZSBvYmplY3QsIGlmIGl0IGlzIG9uZSwgb3RoZXJ3aXNlIHVuZGVmaW5lZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplR2FtZU9iamVjdChcbiAgICBvYmo6IHVua25vd24sXG4gICAgZ2FtZU9iamVjdENsYXNzOiB0eXBlb2YgQmFzZUdhbWVPYmplY3QsXG4gICAgYWxsb3dFcnJvcjogYm9vbGVhbixcbik6IEJhc2VHYW1lT2JqZWN0IHwgRXJyb3I7XG5cbi8qKlxuICogVGFrZXMgYSB2YXJpYWJsZSBhbmQgZW5zdXJlcyBpdCBpcyBhIGdhbWUgb2JqZWN0LlxuICogSWYgaXQgaXMgbm90IHJldHVybnMgdW5kZWZpbmVkLlxuICpcbiAqIEBwYXJhbSBvYmogQW55IHZhcmlhYmxlLCBpZiBpdCBpcyBhIGdhbWUgb2JqZWN0IHBhc3NlcyBpdCBiYWNrLCBvdGhlcndpc2VcbiAqIHJldHVybnMgdW5kZWZpbmVkIG9yIGFuIEVycm9yLlxuICogQHBhcmFtIGdhbWVPYmplY3RDbGFzcyBBbiBvcHRpb25hbCBnYW1lIG9iamVjdCBjbGFzcyB0byBlbmZvcmNlIG9uIHRoZSBnYW1lXG4gKiBvYmplY3QuXG4gKiBAcGFyYW0gYWxsb3dFcnJvciAtIElmIGVycm9ycyBzaG91bGQgYmUgYWxsb3dlZCB0byBiZSByZXR1cm5lZCBpZiB0aGV5XG4gKiBjYW5ub3QgYmUgcmVhc29uYWJsZSBzYW5pdGl6ZWQuXG4gKiBAcmV0dXJucyBUaGUgcGFzc2VkIGluIGdhbWUgb2JqZWN0LCBpZiBpdCBpcyBvbmUsIG90aGVyd2lzZSB1bmRlZmluZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZUdhbWVPYmplY3QoXG4gICAgb2JqOiB1bmtub3duLFxuICAgIGdhbWVPYmplY3RDbGFzczogdHlwZW9mIEJhc2VHYW1lT2JqZWN0LFxuICAgIGFsbG93RXJyb3I6IGZhbHNlLFxuKTogQmFzZUdhbWVPYmplY3QgfCB1bmRlZmluZWQ7XG5cbi8qKlxuICogVGFrZXMgYSB2YXJpYWJsZSBhbmQgZW5zdXJlcyBpdCBpcyBhIGdhbWUgb2JqZWN0LCBJZiB0aGUgcGFzc2VkIGluIHZhbHVlIGlzXG4gKiBub3QgYSBnYW1lIG9iamVjdCBvZiB0aGUgY2xhc3Mgc3BlY2lmaWVkLCByZXR1cm5zIGFuIEVycm9yLlxuICpcbiAqIEBwYXJhbSBvYmogQW55IHZhcmlhYmxlLCBpZiBpdCBpcyBhIGdhbWUgb2JqZWN0IHBhc3NlcyBpdCBiYWNrLCBvdGhlcndpc2VcbiAqIHJldHVybnMgdW5kZWZpbmVkIG9yIGFuIEVycm9yLlxuICogQHBhcmFtIGdhbWVPYmplY3RDbGFzcyBBbiBvcHRpb25hbCBnYW1lIG9iamVjdCBjbGFzcyB0byBlbmZvcmNlIG9uIHRoZSBnYW1lXG4gKiBvYmplY3QuXG4gKiBAcGFyYW0gYWxsb3dFcnJvciAtIElmIGVycm9ycyBzaG91bGQgYmUgYWxsb3dlZCB0byBiZSByZXR1cm5lZCBpZiB0aGV5XG4gKiBjYW5ub3QgYmUgcmVhc29uYWJsZSBzYW5pdGl6ZWQuXG4gKiBAcmV0dXJucyBUaGUgcGFzc2VkIGluIGdhbWUgb2JqZWN0LCBpZiBpdCBpcyBvbmUsIG90aGVyd2lzZSB1bmRlZmluZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZUdhbWVPYmplY3QoXG4gICAgb2JqOiB1bmtub3duLFxuICAgIGdhbWVPYmplY3RDbGFzczogdHlwZW9mIEJhc2VHYW1lT2JqZWN0LFxuICAgIGFsbG93RXJyb3I6IGJvb2xlYW4gPSB0cnVlLFxuKTogQmFzZUdhbWVPYmplY3QgfCB1bmRlZmluZWQgfCBFcnJvciB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIGdhbWVPYmplY3RDbGFzc1xuICAgICAgICA/IG9ialxuICAgICAgICA6IChhbGxvd0Vycm9yXG4gICAgICAgICAgICA/IG5ldyBFcnJvcihgJHtvYmp9IGlzIG5vdCBvZiB0aGUgZXhwZWN0ZWQgR2FtZU9iamVjdCBjbGFzcyBcXGAke2dhbWVPYmplY3RDbGFzcy5uYW1lfVxcYGApXG4gICAgICAgICAgICA6IHVuZGVmaW5lZFxuICAgICAgICApO1xufVxuIl19